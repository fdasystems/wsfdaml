//------------------------------------------------------------------------------
// <auto-generated>
//    Este código se generó a partir de una plantilla.
//
//    Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//    Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebAPI
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Objects;
    using System.Data.Objects.DataClasses;
    using System.Linq;
    
    public partial class fdasys_tempEntities : DbContext
    {
        public fdasys_tempEntities()
            : base("name=fdasys_tempEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<DayWeather> DayWeather { get; set; }
        public DbSet<PosPlanet> PosPlanet { get; set; }
        public DbSet<WeatherCondition> WeatherCondition { get; set; }
        public DbSet<Planet> Planet { get; set; }
    
        [EdmFunction("fdasys_tempEntities", "fn_GetDeterminingSystem")]
        public virtual IQueryable<fn_GetDeterminingSystem_Result> fn_GetDeterminingSystem(Nullable<double> planet1posX, Nullable<double> planet1posY, Nullable<double> planet2posX, Nullable<double> planet2posY, Nullable<double> planet3posX, Nullable<double> planet3posY)
        {
            var planet1posXParameter = planet1posX.HasValue ?
                new ObjectParameter("Planet1posX", planet1posX) :
                new ObjectParameter("Planet1posX", typeof(double));
    
            var planet1posYParameter = planet1posY.HasValue ?
                new ObjectParameter("Planet1posY", planet1posY) :
                new ObjectParameter("Planet1posY", typeof(double));
    
            var planet2posXParameter = planet2posX.HasValue ?
                new ObjectParameter("Planet2posX", planet2posX) :
                new ObjectParameter("Planet2posX", typeof(double));
    
            var planet2posYParameter = planet2posY.HasValue ?
                new ObjectParameter("Planet2posY", planet2posY) :
                new ObjectParameter("Planet2posY", typeof(double));
    
            var planet3posXParameter = planet3posX.HasValue ?
                new ObjectParameter("Planet3posX", planet3posX) :
                new ObjectParameter("Planet3posX", typeof(double));
    
            var planet3posYParameter = planet3posY.HasValue ?
                new ObjectParameter("Planet3posY", planet3posY) :
                new ObjectParameter("Planet3posY", typeof(double));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fn_GetDeterminingSystem_Result>("[fdasys_tempEntities].[fn_GetDeterminingSystem](@Planet1posX, @Planet1posY, @Planet2posX, @Planet2posY, @Planet3posX, @Planet3posY)", planet1posXParameter, planet1posYParameter, planet2posXParameter, planet2posYParameter, planet3posXParameter, planet3posYParameter);
        }
    
        [EdmFunction("fdasys_tempEntities", "fn_GetPosition")]
        public virtual IQueryable<fn_GetPosition_Result> fn_GetPosition(Nullable<int> idPlanet, Nullable<int> dayP)
        {
            var idPlanetParameter = idPlanet.HasValue ?
                new ObjectParameter("IdPlanet", idPlanet) :
                new ObjectParameter("IdPlanet", typeof(int));
    
            var dayPParameter = dayP.HasValue ?
                new ObjectParameter("DayP", dayP) :
                new ObjectParameter("DayP", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fn_GetPosition_Result>("[fdasys_tempEntities].[fn_GetPosition](@IdPlanet, @DayP)", idPlanetParameter, dayPParameter);
        }
    
        [EdmFunction("fdasys_tempEntities", "fn_GetRain")]
        public virtual IQueryable<fn_GetRain_Result> fn_GetRain(Nullable<double> planet1posX, Nullable<double> planet1posY, Nullable<double> planet2posX, Nullable<double> planet2posY, Nullable<double> planet3posX, Nullable<double> planet3posY)
        {
            var planet1posXParameter = planet1posX.HasValue ?
                new ObjectParameter("Planet1posX", planet1posX) :
                new ObjectParameter("Planet1posX", typeof(double));
    
            var planet1posYParameter = planet1posY.HasValue ?
                new ObjectParameter("Planet1posY", planet1posY) :
                new ObjectParameter("Planet1posY", typeof(double));
    
            var planet2posXParameter = planet2posX.HasValue ?
                new ObjectParameter("Planet2posX", planet2posX) :
                new ObjectParameter("Planet2posX", typeof(double));
    
            var planet2posYParameter = planet2posY.HasValue ?
                new ObjectParameter("Planet2posY", planet2posY) :
                new ObjectParameter("Planet2posY", typeof(double));
    
            var planet3posXParameter = planet3posX.HasValue ?
                new ObjectParameter("Planet3posX", planet3posX) :
                new ObjectParameter("Planet3posX", typeof(double));
    
            var planet3posYParameter = planet3posY.HasValue ?
                new ObjectParameter("Planet3posY", planet3posY) :
                new ObjectParameter("Planet3posY", typeof(double));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fn_GetRain_Result>("[fdasys_tempEntities].[fn_GetRain](@Planet1posX, @Planet1posY, @Planet2posX, @Planet2posY, @Planet3posX, @Planet3posY)", planet1posXParameter, planet1posYParameter, planet2posXParameter, planet2posYParameter, planet3posXParameter, planet3posYParameter);
        }
    
        [EdmFunction("fdasys_tempEntities", "fn_GetStraightLine")]
        public virtual IQueryable<fn_GetStraightLine_Result> fn_GetStraightLine(Nullable<double> planet1posX, Nullable<double> planet1posY, Nullable<double> planet2posX, Nullable<double> planet2posY)
        {
            var planet1posXParameter = planet1posX.HasValue ?
                new ObjectParameter("Planet1posX", planet1posX) :
                new ObjectParameter("Planet1posX", typeof(double));
    
            var planet1posYParameter = planet1posY.HasValue ?
                new ObjectParameter("Planet1posY", planet1posY) :
                new ObjectParameter("Planet1posY", typeof(double));
    
            var planet2posXParameter = planet2posX.HasValue ?
                new ObjectParameter("Planet2posX", planet2posX) :
                new ObjectParameter("Planet2posX", typeof(double));
    
            var planet2posYParameter = planet2posY.HasValue ?
                new ObjectParameter("Planet2posY", planet2posY) :
                new ObjectParameter("Planet2posY", typeof(double));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fn_GetStraightLine_Result>("[fdasys_tempEntities].[fn_GetStraightLine](@Planet1posX, @Planet1posY, @Planet2posX, @Planet2posY)", planet1posXParameter, planet1posYParameter, planet2posXParameter, planet2posYParameter);
        }
    
        [EdmFunction("fdasys_tempEntities", "fn_GetWeatherDay")]
        public virtual IQueryable<fn_GetWeatherDay_Result> fn_GetWeatherDay(Nullable<int> dayP)
        {
            var dayPParameter = dayP.HasValue ?
                new ObjectParameter("DayP", dayP) :
                new ObjectParameter("DayP", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fn_GetWeatherDay_Result>("[fdasys_tempEntities].[fn_GetWeatherDay](@DayP)", dayPParameter);
        }
    
        public virtual int usp_FillAllDays(ObjectParameter resultP)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_FillAllDays", resultP);
        }
    
        public virtual int usp_FillDay(Nullable<int> idPlanet, Nullable<int> dayP, ObjectParameter resultPSetDay)
        {
            var idPlanetParameter = idPlanet.HasValue ?
                new ObjectParameter("IdPlanet", idPlanet) :
                new ObjectParameter("IdPlanet", typeof(int));
    
            var dayPParameter = dayP.HasValue ?
                new ObjectParameter("DayP", dayP) :
                new ObjectParameter("DayP", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_FillDay", idPlanetParameter, dayPParameter, resultPSetDay);
        }
    
        public virtual int usp_SetDayPos(Nullable<int> idPlanet, Nullable<int> dayP, Nullable<double> posX, Nullable<double> posY, ObjectParameter resultP)
        {
            var idPlanetParameter = idPlanet.HasValue ?
                new ObjectParameter("IdPlanet", idPlanet) :
                new ObjectParameter("IdPlanet", typeof(int));
    
            var dayPParameter = dayP.HasValue ?
                new ObjectParameter("DayP", dayP) :
                new ObjectParameter("DayP", typeof(int));
    
            var posXParameter = posX.HasValue ?
                new ObjectParameter("PosX", posX) :
                new ObjectParameter("PosX", typeof(double));
    
            var posYParameter = posY.HasValue ?
                new ObjectParameter("PosY", posY) :
                new ObjectParameter("PosY", typeof(double));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_SetDayPos", idPlanetParameter, dayPParameter, posXParameter, posYParameter, resultP);
        }
    
        public virtual int usp_SetWeatherDay(Nullable<int> dayP, Nullable<int> idPlanet1, Nullable<int> idPlanet2, Nullable<int> idPlanet3, string cod, Nullable<double> perimeter, ObjectParameter resultP)
        {
            var dayPParameter = dayP.HasValue ?
                new ObjectParameter("DayP", dayP) :
                new ObjectParameter("DayP", typeof(int));
    
            var idPlanet1Parameter = idPlanet1.HasValue ?
                new ObjectParameter("IdPlanet1", idPlanet1) :
                new ObjectParameter("IdPlanet1", typeof(int));
    
            var idPlanet2Parameter = idPlanet2.HasValue ?
                new ObjectParameter("IdPlanet2", idPlanet2) :
                new ObjectParameter("IdPlanet2", typeof(int));
    
            var idPlanet3Parameter = idPlanet3.HasValue ?
                new ObjectParameter("IdPlanet3", idPlanet3) :
                new ObjectParameter("IdPlanet3", typeof(int));
    
            var codParameter = cod != null ?
                new ObjectParameter("Cod", cod) :
                new ObjectParameter("Cod", typeof(string));
    
            var perimeterParameter = perimeter.HasValue ?
                new ObjectParameter("Perimeter", perimeter) :
                new ObjectParameter("Perimeter", typeof(double));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_SetWeatherDay", dayPParameter, idPlanet1Parameter, idPlanet2Parameter, idPlanet3Parameter, codParameter, perimeterParameter, resultP);
        }
    
        [EdmFunction("fdasys_tempEntities", "ufn_GetWeatherDayWS")]
        public virtual IQueryable<string> ufn_GetWeatherDayWS(Nullable<int> dayP)
        {
            var dayPParameter = dayP.HasValue ?
                new ObjectParameter("DayP", dayP) :
                new ObjectParameter("DayP", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<string>("[fdasys_tempEntities].[ufn_GetWeatherDayWS](@DayP)", dayPParameter);
        }
    }
}
